{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport axios from 'axios';\n\n// 响应式数据\n\nexport default {\n  __name: 'SideNavPC',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const resumeData = ref({\n      name: '',\n      resumeImgUrl: ''\n    });\n    const navData = ref([]);\n    const activeSection = ref(''); //接收滚动数据\n\n    // 加载数据\n    onMounted(() => {\n      //监听sessionpage的滚动事件，获取当前活跃的session\n      window.addEventListener('activeSectionChange', event => {\n        activeSection.value = event.detail.sectionId;\n      });\n      axios.get('/data/resumeData/chinese/basicData.json').then(response => {\n        resumeData.value = response.data;\n      }).catch(error => {\n        console.error('加载简历数据时出错:', error);\n      });\n      axios.get('/data/resumeData/chinese/navData.json').then(response => {\n        navData.value = response.data;\n      }).catch(error => {\n        console.error('加载导航数据时出错:', error);\n      });\n    });\n\n    // 点击导航栏滚动到指定页面\n    const scrollToSection = sectionId => {\n      const target = document.getElementById(sectionId);\n      if (target) {\n        target.scrollIntoView({\n          behavior: 'smooth'\n        });\n      }\n    };\n    const __returned__ = {\n      resumeData,\n      navData,\n      activeSection,\n      scrollToSection,\n      ref,\n      onMounted,\n      get axios() {\n        return axios;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","axios","resumeData","name","resumeImgUrl","navData","activeSection","window","addEventListener","event","value","detail","sectionId","get","then","response","data","catch","error","console","scrollToSection","target","document","getElementById","scrollIntoView","behavior"],"sources":["D:/gitRepository/resume/src/components/sideNav/SideNavPC.vue"],"sourcesContent":["<template>\n    <div class=\"sideNav bg-dark d-flex flex-column\">\n        <div class=\"navContent \">\n            <div class=\"personInfo mt-5 d-flex flex-column align-items-center\">\n                <div class=\"personImg bg-secondary rounded-circle \">\n                    <img :src=\"resumeData.resumeImgUrl\" class=\"rounded-circle p-2\" alt=\"\">\n                </div>\n                <div class=\"personName fw-bold text-white mt-3 fs-3\">\n                    <p>{{ resumeData.name }}</p>\n                </div>\n            </div>\n\n            <!-- 导航栏目 -->\n            <nav :offset=\"70\" class=\"sessionNav d-flex flex-column align-items-start mx-5 px-4 text-white\">\n                <a href=\"#\" \n                   @click=\"scrollToSection(nav.href)\" \n                   :class=\"['navButton', 'nav-link', 'm-2', 'p-1', { active: activeSection === nav.href }]\"\n                   v-for=\"(nav, i) in navData\" \n                   :key=\"i\"\n                   >\n                    <i :class=\"nav.icon\"></i>\n                    <span>&nbsp;&nbsp;&nbsp;{{ nav.text }}</span>\n                </a>\n            </nav>\n        </div>\n        <div class=\"navFooter\">\n            底部\n        </div>\n    </div>\n</template>\n\n<script setup>\nimport { ref, onMounted} from 'vue';\nimport axios from 'axios';\n\n// 响应式数据\nconst resumeData = ref({\n    name: '',\n    resumeImgUrl: ''\n});\n\nconst navData = ref([]);\n\nconst activeSection = ref('');//接收滚动数据\n\n// 加载数据\nonMounted(() => {\n\n    //监听sessionpage的滚动事件，获取当前活跃的session\n    window.addEventListener('activeSectionChange',(event)=>{\n        activeSection.value=event.detail.sectionId\n    });\n\n    axios.get('/data/resumeData/chinese/basicData.json')\n        .then(response => {\n            resumeData.value = response.data;\n        })\n        .catch(error => {\n            console.error('加载简历数据时出错:', error);\n        });\n\n    axios.get('/data/resumeData/chinese/navData.json')\n        .then(response => {\n            navData.value = response.data;\n        })\n        .catch(error => {\n            console.error('加载导航数据时出错:', error);\n        });\n\n});\n\n// 点击导航栏滚动到指定页面\nconst scrollToSection = (sectionId) => {\n    const target = document.getElementById(sectionId);\n    if (target) {\n        target.scrollIntoView({ behavior: 'smooth' });\n    }\n};\n\n</script>\n\n<style scoped>\n.sideNav {\n    width: 320px;\n    height: 100vh;\n\n    .navContent {\n        height: 85vh;\n\n        .personInfo {\n            height: 43%;\n\n            .personImg {\n                width: 200px;\n                height: 200px;\n\n                img {\n                    width: 100%;\n                }\n            }\n        }\n\n        .sessionNav {\n\n            .navButton:hover {\n                color: rgb(213, 139, 255);\n                transition: color 0.4s ease;\n            }\n\n            .navButton.active {\n                color: rgb(213, 139, 255);\n                transition: color 0.4s ease;\n            }\n        }\n    }\n\n    .navFooter {\n        height: 15vh;\n    }\n}\n</style>"],"mappings":"AAgCA,SAASA,GAAG,EAAEC,SAAS,QAAO,KAAK;AACnC,OAAOC,KAAK,MAAM,OAAO;;AAEzB;;;;;;;;IACA,MAAMC,UAAU,GAAGH,GAAG,CAAC;MACnBI,IAAI,EAAE,EAAE;MACRC,YAAY,EAAE;IAClB,CAAC,CAAC;IAEF,MAAMC,OAAO,GAAGN,GAAG,CAAC,EAAE,CAAC;IAEvB,MAAMO,aAAa,GAAGP,GAAG,CAAC,EAAE,CAAC,CAAC;;IAE9B;IACAC,SAAS,CAAC,MAAM;MAEZ;MACAO,MAAM,CAACC,gBAAgB,CAAC,qBAAqB,EAAEC,KAAK,IAAG;QACnDH,aAAa,CAACI,KAAK,GAACD,KAAK,CAACE,MAAM,CAACC,SAAS;MAC9C,CAAC,CAAC;MAEFX,KAAK,CAACY,GAAG,CAAC,yCAAyC,CAAC,CAC/CC,IAAI,CAACC,QAAQ,IAAI;QACdb,UAAU,CAACQ,KAAK,GAAGK,QAAQ,CAACC,IAAI;MACpC,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;QACZC,OAAO,CAACD,KAAK,CAAC,YAAY,EAAEA,KAAK,CAAC;MACtC,CAAC,CAAC;MAENjB,KAAK,CAACY,GAAG,CAAC,uCAAuC,CAAC,CAC7CC,IAAI,CAACC,QAAQ,IAAI;QACdV,OAAO,CAACK,KAAK,GAAGK,QAAQ,CAACC,IAAI;MACjC,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;QACZC,OAAO,CAACD,KAAK,CAAC,YAAY,EAAEA,KAAK,CAAC;MACtC,CAAC,CAAC;IAEV,CAAC,CAAC;;IAEF;IACA,MAAME,eAAe,GAAIR,SAAS,IAAK;MACnC,MAAMS,MAAM,GAAGC,QAAQ,CAACC,cAAc,CAACX,SAAS,CAAC;MACjD,IAAIS,MAAM,EAAE;QACRA,MAAM,CAACG,cAAc,CAAC;UAAEC,QAAQ,EAAE;QAAS,CAAC,CAAC;MACjD;IACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}